<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lgt.clubmanagement.dao.SocietiespersonnelMapper">
  <resultMap id="BaseResultMap" type="com.lgt.clubmanagement.entity.Societiespersonnel">
    <id column="sId" jdbcType="INTEGER" property="sid" />
    <id column="uId" jdbcType="INTEGER" property="uid" />
    <id column="job" jdbcType="INTEGER" property="job" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sId, uId, job, date, status
  </sql>
  <select id="selectByExample" parameterType="com.lgt.clubmanagement.entity.SocietiespersonnelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from societiespersonnel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.lgt.clubmanagement.entity.SocietiespersonnelKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from societiespersonnel
    where sId = #{sid,jdbcType=INTEGER}
      and uId = #{uid,jdbcType=INTEGER}
      and job = #{job,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.lgt.clubmanagement.entity.SocietiespersonnelKey">
    delete from societiespersonnel
    where sId = #{sid,jdbcType=INTEGER}
      and uId = #{uid,jdbcType=INTEGER}
      and job = #{job,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lgt.clubmanagement.entity.SocietiespersonnelExample">
    delete from societiespersonnel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lgt.clubmanagement.entity.Societiespersonnel">
    insert into societiespersonnel (sId, uId, job, 
      date, status)
    values (#{sid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{job,jdbcType=INTEGER}, 
      #{date,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lgt.clubmanagement.entity.Societiespersonnel">
    insert into societiespersonnel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        sId,
      </if>
      <if test="uid != null">
        uId,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="job != null">
        #{job,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lgt.clubmanagement.entity.SocietiespersonnelExample" resultType="java.lang.Long">
    select count(*) from societiespersonnel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update societiespersonnel
    <set>
      <if test="record.sid != null">
        sId = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uId = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.job != null">
        job = #{record.job,jdbcType=INTEGER},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update societiespersonnel
    set sId = #{record.sid,jdbcType=INTEGER},
      uId = #{record.uid,jdbcType=INTEGER},
      job = #{record.job,jdbcType=INTEGER},
      date = #{record.date,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lgt.clubmanagement.entity.Societiespersonnel">
    update societiespersonnel
    <set>
      <if test="date != null">
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where sId = #{sid,jdbcType=INTEGER}
      and uId = #{uid,jdbcType=INTEGER}
      and job = #{job,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lgt.clubmanagement.entity.Societiespersonnel">
    update societiespersonnel
    set date = #{date,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where sId = #{sid,jdbcType=INTEGER}
      and uId = #{uid,jdbcType=INTEGER}
      and job = #{job,jdbcType=INTEGER}
  </update>
</mapper>